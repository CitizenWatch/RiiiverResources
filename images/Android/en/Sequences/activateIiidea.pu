@startuml
title Activate an iiidea
hide footbox

skinparam DefaultFontName "Noto Sans JP, Helvetica, Arial, Liberation Sans"
skinparam BackgroundColor #F2EEE6
skinparam Shadowing false
skinparam NoteBackgroundColor #F9B5AD
skinparam NodeBorderColor #F26767

skinparam sequence {
ArrowColor #444444
ActorBorderColor Black
LifeLineBorderColor #222222
LifeLineBackgroundColor White
BoxBorderColor #FFFFFF
BoxBackgroundColor #F2fEf6
GroupBackgroundColor #FFFFFF
GroupBodyBackgroundColor #F3F0F0

ParticipantBorderColor #111111
ParticipantBackgroundColor White
ParticipantFontSize 17
ParticipantFontColor #111111
BoundaryBorderColor Gray
ActorBackgroundColor #eeeeee
ActorFontColor Black

}

actor User
participant YourApp as App
participant "Riiiver\nSDK" as ERSDK
participant "Riiiver\nCloud" as Riiiver

activate App

App -> ERSDK: ERAuth.getInstance().initialize(Context context)
activate ERSDK

... Logged in - iiidea is an instance of the target ERApplet class ...

User -> App: Configure the PreferenceUI\nto the iiidea

App -> ERSDK: Update authentication session.
... Refer to "Update credentials" ...
note right of App: You must set preferences before activating iiidea,\nand calling loadPreferences()\nwill cause the preferences to be set.
App -> ERSDK: loadPreferences(\n\tERApplet applet,\n\tURL urlBaseFolder\n)
App <-- ERSDK: Display the Preference screen in the webView.
User <- App: Display the Preference UI
User --> ERSDK: Preference UI oprerataion
ERSDK -> ERSDK: Setting the Preference value
ERSDK <--> Riiiver: Processing when iiidea needs to\nauthenticate with a web service, etc.
User <-- ERSDK: Update the Preference screen with values.

User -> App: Turn on (make available)\nthe iiidea.
App -> ERSDK: iiidea.activate(\n\tContenxt context,\n\tCompletion2<String[], ERServiceProxyData[]> completion\n\t)
ERSDK <--> Riiiver: Processing when iiidea needs to\nauthenticate with a web service, etc.
App <-- ERSDK: completion(\n\tString[],\n\tERServiceProxyData[],\n\tERError\n)
alt completionのString[] / tERServiceProxyData[] / All ERError are null <success>.
    User <-- App: Notification that the iiidea has been turned on
else Non-null returns <fail>.
    note right of App
        When using external web services or using functions that require authorization such
        as location information in the OS:

            In case the authentication information required to use external web services is not sufficient:
                The required list of information is passed to ERServiceProxyData[]
                of completion as unauthorizedProxyList.

            In case the necessary permissions are not obtained from the OS:
                The required permission list is passed to String[] of completion as 
                UnauthorizedPermissionList.
    end note
    App -> User: Prompt for necessary settings
end

@enduml
